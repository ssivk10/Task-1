//1
public int factorial(int n) {
  if(n!=0)
  return n*(factorial(n-1));
  return 1;
}


//2
public int bunnyEars(int bunnies) {
  if(bunnies>=1)
  return 2+bunnyEars(bunnies-1);
  return 0;
}


//3
public int fibonacci(int n) {
  if(n<=1)
  return n;
  return fibonacci(n-1)+fibonacci(n-2);
}


//4
public int bunnyEars2(int bunnies) {
  if(bunnies==0) return 0;
  if(bunnies%2==0) return 3+bunnyEars2(bunnies-1);
  else return 2+ bunnyEars2(bunnies-1);
}


//5
public int triangle(int rows) {
  if(rows==0)
  return 0;
  return rows+triangle(rows-1);
}


//6
public int sumDigits(int n) {
  if(n==0)
  return 0;
  else return (n%10)+sumDigits(n/10);
}

//7
public int count7(int n) {
  if(n==0) return 0;
  else if(n%10==7) return 1+count7(n/10);
  else return 0+count7(n/10);
}


//8
public int count8(int n) {
  if(n==0)return 0;
  else if(n%10==8 && (n/10)%10==8)return 2+count8(n/10);
  else if(n%10==8) return 1+count8(n/10);
  else return 0+count8(n/10);
}


//9
public int powerN(int base, int n) {
  if(n==0)return 1;
  else return base*powerN(base,n-1);
}


//10
public int countX(String str) {
  if(str.length()==0)
  return 0;
  else if(str.charAt(0)=='x') return 1+countX(str.substring(1));
  return countX(str.substring(1));
}


//11
public int countHi(String str) {
  if(str.length()<=1)return 0;
  if(str.length()==2 && str.equals("hi")) return 1;
  if( str.length()>=3 && str.substring(0,2).equals("hi")) return 1+countHi(str.substring(2));
  return countHi(str.substring(1));
}


//12
public String changeXY(String str) {
  if(str.length()==0) return str;
  if(str.charAt(0)=='x')return 'y'+changeXY(str.substring(1));
  return str.charAt(0)+changeXY(str.substring(1));
}


//13
public String changePi(String str) {
  if(str.length()<=1)return str;
  if(str.length()>=2 && str.substring(0,2).equals("pi")) return "3.14"+changePi(str.substring(2));
  else return str.charAt(0)+changePi(str.substring(1));
}


//14
public String noX(String str) {
  if(str.length()==0)
  return str;
  if(str.charAt(0)=='x')
    return noX(str.substring(1));
  else return str.charAt(0)+noX(str.substring(1));
}


//15
public boolean array6(int[] nums, int index) {
  if(index==nums.length)
  return false;
  else if(nums[index]==6) return true;
  else return array6(nums,index+1);
}

//16
public int array11(int[] nums, int index) {
  if(index==nums.length)return 0;
  if(nums[index]==11)return 1+array11(nums,index+1);
  return array11(nums,index+1);
}


//17
public boolean array220(int[] nums, int index) {
  if(index==nums.length)return false;
  if(index+1<nums.length && nums[index+1]==nums[index]*10)return true;
  return array220(nums,index+1);
}


//18
public String allStar(String str) {
  if(str.length()<=1)return str;
  return str.charAt(0)+"*"+allStar(str.substring(1));
}


//19
public String pairStar(String str) {
  if(str.length()<=1)return str;
  if(str.charAt(0)==str.charAt(1))return str.charAt(0)+"*"+pairStar(str.substring(1));
  return str.charAt(0)+pairStar(str.substring(1));
}


//20
public String endX(String str) {
  if(str.length()<=1)return str;
  if(str.length()>=2 &&str.charAt(0)=='x')return endX(str.substring(1))+"x";
  return str.charAt(0)+endX(str.substring(1));
}


//21
public int countPairs(String str) {
  if(str.length()<=2)return 0;
  if(str.charAt(0)==str.charAt(2))return 1+countPairs(str.substring(1));
  else return countPairs(str.substring(1));
}


//22
public int countAbc(String str) {
  if(str.length()<=2)return 0;
  if(str.substring(0,3).equals("abc")||str.substring(0,3).equals("aba"))
  return 1+countAbc(str.substring(1));
  return countAbc(str.substring(1));
}


//23
public int count11(String str) {
  if(str.length()<2)return 0;
  if(str.substring(0,2).equals("11"))
  return 1+count11(str.substring(2));
  return count11(str.substring(1));
}


//24
public String stringClean(String str) {
  if(str.length()<=1)return str;
  if(str.charAt(0)==str.charAt(1))return stringClean(str.substring(1));
  return str.charAt(0)+stringClean(str.substring(1));
}


//25
public int countHi2(String str) {
  if(str.length()<=1)return 0;
  if(str.length()==2 && str.equals("hi"))return 1;
  if(str.charAt(0)=='x' && str.substring(1,3).equals("hi"))
  return 0 + countHi2(str.substring(3));
  else if(str.charAt(0)!='x' && str.substring(1,3).equals("hi"))
  return 1 + countHi2(str.substring(3));
  return countHi2(str.substring(1));
}


//26
public String parenBit(String str) {
  
}


//27
public boolean nestParen(String str) {
  
}


//28
public int strCount(String str, String sub) {
  if(str.length()<sub.length())return 0;
  if(str.substring(0,sub.length()).equals(sub)) return 1+strCount(str.substring(sub.length()),sub);
  return 0+strCount(str.substring(1),sub);
}



//29
public boolean strCopies(String str, String sub, int n) {
  
}


//30
public int strDist(String str, String sub) {
  if(str.length() < sub.length())
		return 0;
	if(str.substring(0, sub.length()).equals(sub))
	{
		if(str.substring(str.length() - sub.length(), str.length()).equals(sub))
			return str.length();
		return strDist(str.substring(0, str.length() - 1), sub);
	}
	return strDist(str.substring(1), sub);
}









