//1
public boolean sleepIn(boolean weekday, boolean vacation) {
  if(!vacation)
  {
    return weekday?false:true;
  }
  else
  return true;
}

//2
public boolean monkeyTrouble(boolean aSmile, boolean bSmile) {
  if((aSmile && bSmile)||(!aSmile && !bSmile))
  return true;
  else
  return false;
}

//3
public int sumDouble(int a, int b) {
  return a==b?(a+b)*2:a+b;
}

//4
public int diff21(int n) {
  int d = Math.abs(21-n);
  if(n>=21)
  return 2*d;
  else
  return d;
}

//5
public boolean parrotTrouble(boolean talking, int hour) {
  if(hour<7 || hour>20)
  {
    if(talking)
    return true;
    else
    return false;
  }
  else
  return false;
}

//6
public boolean makes10(int a, int b) {
  return ((a==10 || b==10) || a+b==10)?true:false;
}

//7
public boolean nearHundred(int n) {
  return ((n>=90 && n<=110)||(n>=190 && n<=210))?true:false;
}

//8
public boolean posNeg(int a, int b, boolean negative) {
  if(negative)
  return (a<0 && b<0)?true:false;
  else
  return((a<0 && b>0)||(a>0 && b<0))?true:false;
}

//9
public String notString(String str) {
  return str.startsWith("not")?str:"not " +str;
}

//10
public String missingChar(String str, int n) {
  StringBuilder s= new StringBuilder(str);
  return s.deleteCharAt(n).toString();
}

//11
public String frontBack(String str) {
  if(str.length()>=2)
  {
    String front=str.substring(0,1);
  String back=str.substring(str.length()-1);
  return back+str.substring(1,str.length()-1)+front;
  }
  else
  return str;
}

//12
public String front3(String str) {
  if(str.length()>=3)
  {
    String s=str.substring(0,3);
  return s+s+s;
  }
  else return str+str+str;
}

//13
public String backAround(String str) {
  String s=str.substring(str.length()-1);
  return s+str+s;
}

//14
public boolean or35(int n) {
  return (n%3==0 || n%5==0)? true:false;
}

//15
public String front22(String str) {
  if(str.length()>=2)
  {
    String s=str.substring(0,2);
  return s+str+s;
  }
  else return str+str+str;
}

//16
public boolean startHi(String str) {
   return str.startsWith("hi")?true:false;
}

//17
public boolean icyHot(int temp1, int temp2) {
  return ((temp1>100 && temp2<0)||(temp1<0 && temp2>100))?true:false;
}

//18
public boolean in1020(int a, int b) {
  return((a>=10 && a<=20)||(b>=10 && b<=20))?true:false;
}

//19
public boolean hasTeen(int a, int b, int c) {
  return ((a>=13 &&a<=19) || (b>=13 &&b<=19)||(c>=13 &&c<=19))?true:false;
}

//20
public boolean loneTeen(int a, int b) {
  if((a>=13 && a<=19)^(b>=13 && b<=19))
  return true;
  else return false;
}

//21
public String delDel(String str) {
  if(str.length()>=4)
  {
    if(str.substring(1,4).equals("del"))
    return str.substring(0,1)+str.substring(4);
  }
  return str;
}

//22
public boolean mixStart(String str) {
  if(str.length()>=3)
  return str.substring(1,3).equals("ix");
  else return false;
}

//23
public String startOz(String str) 
{
  if(str.startsWith("oz")) return "oz";
  else if(str.startsWith("o")) return "o";
  else if(str.startsWith("z",1)) return "z";
  else return "";
}

//24
public int intMax(int a, int b, int c) {
  if(a>c)
  {
    return a>b?a:b;
  }
  else if(b>c)
  return b>a?b:a;
  else return c;
}

//25
public int close10(int a, int b) {
  if(Math.abs(10-a)!=Math.abs(10-b))
    return (10-a>10-b)?a:b;
  else return 0;
}

//26
public boolean in3050(int a, int b) {
  if(((a>=30 && a<=40)&&(b>=30 && b<=40))||((a>=40 && a<=50)&&(b>=40 && b<=50)))
  return true;
  else return false;
}

//27
public int max1020(int a, int b) {
  if((a<10 || a>20) && (b<10 || b>20))
  return 0;
  else if((a>=10 && a<=20) && (b<10 || b>20)) return a;
  else if((b>=10 && b<=20) && (a<10 || a>20)) return b;
  else return a>b?a:b;
}

//28
public boolean stringE(String str) {
  int c=0;
  for (int i=0; i<str.length();i++)
  {
    if(str.charAt(i)=='e')
    c++;
  }
  if(c>=1 && c<=3) return true;
  else return false;
}

//29
public boolean lastDigit(int a, int b) {
  return (a%10==b%10)?true:false;
}

//30
public String endUp(String str) {
  String uc;
  if(str.length()>=3)
  {
    uc = str.substring(str.length()-3, str.length()).toUpperCase();
    return str.substring(0, str.length()-3)+uc;
  }
  else return str.toUpperCase();
}

//31
public String everyNth(String str, int n) {
  StringBuilder sb = new StringBuilder();
  sb.append(str.charAt(0));
  for(int i=n; i<str.length();i+=n)
  {
    sb.append(str.charAt(i));
  }
  return sb.toString();
}






